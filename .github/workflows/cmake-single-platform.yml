# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches-ignore:
      - "main"
  pull_request:
    branches-ignore:
          - "main"

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v3

    - name: Install SDL2
      run: |
        sudo apt-get update -y
        sudo apt-get install -y libjpeg-dev libpng-dev libfreetype-dev libopusfile-dev libflac-dev libxmp-dev libfluidsynth-dev libwavpack-dev cmake libmodplug-dev libsdl2-dev
        git clone https://github.com/libsdl-org/SDL.git --branch release-2.26.5
        cd SDL
        mkdir build
        cd build
        cmake .. && make -j4
        sudo make install
        cd ../../
        sudo rm -rf SDL
        cd SDL_image
        git clone --branch release-2.6.3 https://github.com/libsdl-org/SDL_image.git
        git checkout SDL2
        mkdir build
        cd build
        cmake .. && make -j4
        sudo make install
        cd ../../
        sudo rm -rf SDL_image
        git clone --branch release-2.6.3 https://github.com/libsdl-org/SDL_mixer.git
        cd SDL_mixer
        git checkout SDL2
        mkdir build
        cd build
        cmake .. && make -j4
        sudo make install
        cd ../../
        sudo rm -rf SDL_mixer
        git clone --branch release-2.20.2 https://github.com/libsdl-org/SDL_ttf.git
        cd SDL_ttf
        git checkout SDL2
        mkdir build
        cd build
        cmake .. && make -j6
        sudo make install
        cd ../../
        sudo rm -rf SDL_ttf
        git clone https://github.com/libSDL2pp/libSDL2pp.git --branch 0.18.1
        cd libSDL2pp
        mkdir build
        cd build
        cmake .. && make -j6
        sudo make install
        cd ../../
        sudo rm -rf libSDL2pp

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

